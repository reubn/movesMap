{
  "name": "moves",
  "version": "0.0.2",
  "description": "api wrapper for moves app",
  "author": {
    "name": "tyke lewis",
    "email": "tykelewis@gmail.com"
  },
  "dependencies": {
    "underscore": "1.3.1",
    "request": "2.21.x"
  },
  "devDependencies": {
    "mocha": "1.x",
    "should": "0.6.x",
    "istanbul": "0.1.x",
    "express": "3.x"
  },
  "readmeFilename": "README.md",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tyke/node-moves.git"
  },
  "keywords": [
    "render",
    "express",
    "templates",
    "underscore",
    "jade",
    "haml",
    "ejs"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/tyke/node-moves/issues"
  },
  "readme": "Moves API for Node\n==========\nThis provides a wrapper to the [Moves API](https://dev.moves-app.com/docs/api). Please refer to the documentation before getting started. You'll need a [client](https://dev.moves-app.com/clients) before you can begin.\n\nInstall\n-------\n<pre>\nnpm install moves\n</pre>\n\nOauth\n=====\n<pre>\n  //initialize with client information as created at (https://dev.moves-app.com/clients)\n  var Moves = require('moves')\n    , moves = new Moves({\n          client_id: 'your client id'\n        , client_secret: 'your client secret'\n        , redirect_uri: 'your redirect uri'\n      })\n</pre>\n\nStart Auth Flow\n---------------\n<pre>\n  var authorize_url = moves.authorize({\n      scope: ['activity', 'location'] //can contain either activity, location or both\n    , state: 'my_state' //optional state as per oauth\n  })\n  \n  /* --OR-- */\n  \n  //optionally pass in an [Express Response Object](http://expressjs.com/api.html#response)\n  //and it will automatically redirect the user\n  moves.authorize({\n      scope: ['activity', 'location'] //can contain either activity, location or both\n    , state: 'my_state' //optional state as per oauth\n  }, response)\n</pre>\n\nRetrieve a token\n----------------\n<pre>\n  moves.token('code returned from authorize step above', function(error, response, body) {\n    var access_token = body.access_token\n      , refresh_token = body.refresh_token\n      , expires_in = body.expires_in\n  })\n</pre>\n  \nGet information about a token\n-----------------------------\n<pre>\n  moves.token_info(access_token, function(error, response, body) {\n    \n  })\n</pre>\n  \nRefresh an access token\n-----------------------\n<pre>\n  moves.refresh_token(refresh_token, function(error, response, body) {\n  \n  })\n</pre>\n  \nUsing the API\n=============\nNow that we have a valid access token, we can hit any endpoints that our token is correctly scoped to\n<pre>\n  moves.get('/user/profile', function(error, response, body) {\n  \n  })\n  moves.get('/user/summary/daily?from=<from>&to=<to>', function(error, response, body) {\n  \n  })\n</pre>\n",
  "_id": "moves@0.0.2",
  "dist": {
    "shasum": "e6565abdf2f3ea9137d16d5d49572a0db04d1404",
    "tarball": "http://registry.npmjs.org/moves/-/moves-0.0.2.tgz"
  },
  "_from": "moves@",
  "_npmVersion": "1.2.25",
  "_npmUser": {
    "name": "tyke",
    "email": "tykelewis@gmail.com"
  },
  "maintainers": [
    {
      "name": "tyke",
      "email": "tykelewis@gmail.com"
    }
  ],
  "_shasum": "e6565abdf2f3ea9137d16d5d49572a0db04d1404",
  "_resolved": "https://registry.npmjs.org/moves/-/moves-0.0.2.tgz"
}
